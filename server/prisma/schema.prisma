generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Update your existing schema.prisma
model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  activities Activity[] // Add this line
}

model Product {
  id           Int              @id @default(autoincrement())
  name         String
  createdAt    DateTime         @default(now())
  category     String
  archived     Boolean          @default(false)
  variants     ProductVariant[]
  baseSku      String           @unique
  description  String?
  updatedAt    DateTime         @updatedAt
  transactions Transaction[]
  activities   Activity[] // Add this line
}

model ProductVariant {
  id           Int      @id @default(autoincrement())
  productId    Int
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  sku          String // Variant-specific SKU
  color        String?
  size         String?
  costPrice    Float
  sellingPrice Float
  quantity     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  transactions Transaction[]

  @@unique([productId, color, size])
  @@unique([sku])
}

model Activity {
  id        Int      @id @default(autoincrement())
  type      String
  details   String?
  userId    Int
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User     @relation(fields: [userId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}

model Transaction {
  id           Int      @id @default(autoincrement())
  type         String
  productId    Int
  variantId    Int?
  quantity     Int
  date         DateTime @default(now())
  discount     Float?   @default(0) // Add this field
  discountType String?  @default("fixed") // Add this field: "fixed" or "percentage"
  notes        String?
  product      Product  @relation(fields: [productId], references: [id])
  variant      ProductVariant? @relation(fields: [variantId], references: [id]) // Add this relation
}
